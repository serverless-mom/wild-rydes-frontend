AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Resources:
  Function:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-Function
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: Function
      CodeUri: src/Function
      Handler: index.handler
      Runtime: nodejs8.10
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - S3CrudPolicy:
            BucketName: !Ref WildRydeFrontend
      Environment:
        Variables:
          BUCKET_NAME: !Ref WildRydeFrontend
          BUCKET_ARN: !GetAtt WildRydeFrontend.Arn
  WildRydeFrontend:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-wildrydefrontend
    Metadata:
      StackeryName: wild-ryde-frontend
  githubToS3:
    Type: Custom::githubToS3
    Properties:
      ServiceToken: !GetAtt Function.Arn
  LoadTable:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-LoadTable
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: LoadTable
      CodeUri: src/LoadTable
      Handler: handlers/load_table.handler
      Runtime: python3.6
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - DynamoDBCrudPolicy:
            TableName: !Ref UnicornsTable
      Environment:
        Variables:
          TABLE_NAME: !Ref UnicornsTable
          TABLE_ARN: !GetAtt UnicornsTable.Arn
    Metadata:
      StackeryName: LoadTable
  UnicornsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: ${self:custom.unicorn_hash_key}
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: ${self:custom.unicorn_hash_key}
          KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      TableName: !Sub ${AWS::StackName}-UnicornsTable
    Metadata:
      StackeryName: UnicornsTable
  Api:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub
        - ${ResourceName} From Stack ${StackTagName} Environment ${EnvironmentTagName}
        - ResourceName: ApiGatewayRestApi
      StageName: !Ref EnvironmentAPIGatewayStageName
      DefinitionBody:
        swagger: '2.0'
        info: {}
        paths:
          /unicorn:
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${RequestUnicorn.Arn}/invocations
              responses: {}
      EndpointConfiguration: REGIONAL
    Metadata:
      StackeryName: ApiGatewayRestApi
  RequestUnicorn:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-RequestUnicorn
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: RequestUnicorn
      CodeUri: src/RequestUnicorn
      Handler: handlers/get_unicorn.handler
      Runtime: python3.6
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - DynamoDBCrudPolicy:
            TableName: !Ref UnicornsTable
      Events:
        ApiGETunicorn:
          Type: Api
          Properties:
            Path: /unicorn
            Method: GET
            RestApiId: !Ref Api
      Environment:
        Variables:
          TABLE_NAME: !Ref UnicornsTable
          TABLE_ARN: !GetAtt UnicornsTable.Arn
    Metadata:
      StackeryName: RequestUnicorn
Parameters:
  StackTagName:
    Type: String
    Description: Stack Name (injected by Stackery at deployment time)
  EnvironmentTagName:
    Type: String
    Description: Environment Name (injected by Stackery at deployment time)
  EnvironmentAPIGatewayStageName:
    Type: String
    Description: Environment name used for API Gateway Stage names (injected by Stackery at deployment time)